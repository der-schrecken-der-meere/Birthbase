name: Publish Release
on:
  push:
    tags:
      - v**
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        # NOTE: enterprise developers may hard code a version
        with:
          node-version: 'lts/*'
        
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}
      
      - name: Install Ubuntu dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Fix problem with @tauri-apps/api / -cli
        run: |
          npm i @tauri-apps/api
          npm i -D @tauri-apps/cli

      - name: Install frontend
        run: |
          npm install

      - name: Get latest release draft
        id: get_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          response=$(gh api repos/${{ github.repository }}/releases --jq '.[] | select(.draft == true) | .body' | head -n 1)
          echo "PATCH_NOTES<<EOF" >> $GITHUB_ENV
          echo "$response" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        shell: bash

      # TODO: https://tauri.app/v1/guides/building/linux#cross-compiling-tauri-applications-for-arm-based-devices
      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          # tauri-action replaces \_\_VERSION\_\_ with the app version
          includeUpdaterJson: true
          tagName: app-v__VERSION__
          releaseName: "APP v__VERSION__"
          releaseBody: "${{ env.PATCH_NOTES }}"
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
